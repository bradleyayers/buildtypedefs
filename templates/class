<<in {item, name, items, imports}>>

export class <<t item.id>>
<<if item.typeParams>>
  <
  <<for elt item.typeParams>><<if $i>>, <</if>><<type {item: elt, skipColon: true, items: items, imports: imports}>><</for>>
  >
<</if>> 
<<if item.extends>> extends <<type  {item: item.extends, skipColon: true, items: items, imports: imports}>><</if>>{ 
<<t "\n">>
<<if item.constructor>>
  <<define {item: item.constructor, name: name, items: items, imports: imports}>>
<</if>>

<<if item.properties>>
  <<for name, prop in item.properties>><<define {item: prop, name: name, items: items, imports: imports}>><</for>>
<</if>>

<<if item.staticProperties>>
  <<for name, prop in item.staticProperties>><<define {item: prop, name: name, static: true, items: items, imports: imports}>><</for>>
<</if>>

}
<<t "\n">>